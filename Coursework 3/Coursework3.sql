/* 
Samuele Joshi (180318461) 
Ali Irzam Kathia (190318158) 
Ismail Khan (190204482) 
Musa Lala (190801410)
*/
 
CREATE TABLE Employees (       

  EmpID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),       

  EmpFirstName VARCHAR(20) NOT NULL,       

  EmpSurname VARCHAR(20) NOT NULL,       

  PRIMARY KEY (EmpID)      

);      

  

CREATE TABLE StationLocation ( 

  CityID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),    

  StationCity VARCHAR(30) NOT NULL,            

  PRIMARY KEY (CityID) 

); 

  

CREATE TABLE Station (       

  StationID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),       

  StationName VARCHAR(30) NOT NULL, 

  CityID INT, 

  FOREIGN KEY (CityID) REFERENCES StationLocation(CityID),       

  PRIMARY KEY (StationID)       

);       

  

CREATE TABLE Train (       

  TrainID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),     

  TModern INT NOT NULL,       

  ServiceStatus INT NOT NULL,       

  PRIMARY KEY (TrainID)       

);   

  

CREATE TABLE Conductor (       

  ConductorID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),       

  EmpID INT,     

  FOREIGN KEY (EmpID) REFERENCES Employees(EmpID),       

  PRIMARY KEY (ConductorID)       

);      

  

CREATE TABLE Service (       

  ServiceID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),       

  EmpID INT,      

  FOREIGN KEY (EmpID) REFERENCES Employees(EmpID),       

  PRIMARY KEY (ServiceID)       

);       

  

CREATE TABLE ISecurity (       

  ISecurityID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),       

  EmpID INT,     

  FOREIGN KEY (EmpID) REFERENCES Employees(EmpID),       

  PRIMARY KEY (ISecurityID)       

);        

  

CREATE TABLE Driver (       

  DriverID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),       

  EmpID INT,     

  FOREIGN KEY (EmpID) REFERENCES Employees(EmpID),       

  PRIMARY KEY (DriverID)       

);     

  

CREATE TABLE Crew (       

  CrewID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),       

  ConductorID INT,       

  DriverID INT,      

  Service1ID INT,      

  Service2ID INT,      

  Service3ID INT,      

  Service4ID INT,      

  Service5ID INT,      

  ISecurityID INT,     

  FOREIGN KEY (ConductorID) REFERENCES Conductor(ConductorID),     

  FOREIGN KEY (DriverID) REFERENCES Driver(DriverID),       

  FOREIGN KEY (Service1ID) REFERENCES Service(ServiceID),     

  FOREIGN KEY (Service2ID) REFERENCES Service(ServiceID),     

  FOREIGN KEY (Service3ID) REFERENCES Service(ServiceID),     

  FOREIGN KEY (Service4ID) REFERENCES Service(ServiceID),     

  FOREIGN KEY (Service5ID) REFERENCES Service(ServiceID),     

  FOREIGN KEY (ISecurityID) REFERENCES ISecurity(ISecurityID),      

  PRIMARY KEY (CrewID)       

);     

  

CREATE TABLE Journey (       

  JourneyID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),       

  JourneyDate DATE NOT NULL,       

  CrewID INT,     

  TrainID INT,      

  FOREIGN KEY (CrewID) REFERENCES Crew(CrewID),     

  FOREIGN KEY (TrainID)REFERENCES Train(TrainID),     

  PRIMARY KEY (JourneyID)        

);    

CREATE TABLE Route (         

  RouteID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),         

  Distance SMALLINT NOT NULL,      

  StartTime TIMESTAMP,  

  EndTime TIMESTAMP,  

  RModern INT NOT NULL,       

  StartStation INT,         

  TerminalStation INT,        

  JourneyID INT,       

  FOREIGN KEY (StartStation) REFERENCES Station(StationID),       

  FOREIGN KEY (TerminalStation) REFERENCES Station(StationID),       

  FOREIGN KEY (JourneyID) REFERENCES Journey(JourneyID),     

  PRIMARY KEY (RouteID)         

);     

  

CREATE TABLE Passenger (       

  PassengerID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),       

  PFirstName VARCHAR(20) NOT NULL,       

  PSurname VARCHAR(20) NOT NULL,       

  PType VARCHAR(20) NOT NULL,       

  RouteID INT,     

  FOREIGN KEY (RouteID) REFERENCES Route(RouteID),       

  PRIMARY KEY (PassengerID)       

);    

  

ALTER TABLE Route ADD CONSTRAINT chk_RModern CHECK (RModern >= 0 and RModern <=1);     

ALTER TABLE Train ADD CONSTRAINT chk_TModern CHECK (TModern >= 0 and TModern <=1);    

ALTER TABLE Train ADD CONSTRAINT chk_ServiceStatus CHECK (ServiceStatus >= 0 and ServiceStatus <=1);   

ALTER TABLE Passenger ADD CONSTRAINT chk_PType CHECK (PType IN ('Child', 'Teenager', 'Adult', 'Senior Citizen', 'Student')); 

  

INSERT INTO Employees (EmpFirstName,EmpSurname)   

  WITH employees AS (   

    SELECT 'Ali', 'Irzam' FROM dual UNION ALL   

    SELECT 'Musa', 'Lala' FROM dual UNION ALL   

    SELECT 'Samuel', 'Joshi' FROM dual UNION ALL   

    SELECT 'Ismail', 'Khan' FROM dual UNION ALL   

    SELECT 'Sam', 'Carder' FROM dual UNION ALL   

    SELECT 'Amelia', 'Branch' FROM dual UNION ALL   

    SELECT 'Bella', 'Armstrong' FROM dual UNION ALL   

    SELECT 'Ella', 'Travis' FROM dual UNION ALL   

    SELECT 'Talha', 'Farooq' FROM dual UNION ALL   

    SELECT 'Indie', 'Oiva' FROM dual UNION ALL   

    SELECT 'Kim', 'Jong Un' FROM dual UNION ALL   

    SELECT 'Kassandra', 'Line' FROM dual UNION ALL   

    SELECT 'Talha', 'Faruq' FROM dual UNION ALL   

    SELECT 'Wanye', 'Kier' FROM dual UNION ALL   

    SELECT 'Nicole', 'Ainsley' FROM dual UNION ALL   

    SELECT 'Bradley', 'Armstrong' FROM dual    

  )   

SELECT * FROM employees;   

  

INSERT INTO Conductor (EmpID)    

    WITH Conductors AS (   

        SELECT 1 from dual UNION ALL   

        SELECT 2 from dual   

  )   

SELECT * FROM Conductors;   

  

INSERT INTO ISecurity (EmpID)    

    WITH Isecuritys AS (   

        SELECT 3 from dual UNION ALL   

        SELECT 4 from dual   

  )   

SELECT * FROM Isecuritys;   

  

INSERT INTO Driver (EmpID)    

    WITH Drivers AS (   

        SELECT 5 from dual UNION ALL   

        SELECT 6 from dual   

  )   

SELECT * FROM Drivers;   

  

INSERT INTO Service (EmpID)   

    WITH Services AS (   

        SELECT 7 from dual UNION ALL   

        SELECT 8 from dual UNION ALL   

        SELECT 9 from dual UNION ALL   

        SELECT 10 from dual UNION ALL   

        SELECT 11 from dual UNION ALL   

        SELECT 12 from dual UNION ALL   

        SELECT 13 from dual UNION ALL   

        SELECT 14 from dual UNION ALL   

        SELECT 15 from dual UNION ALL   

        SELECT 16 from dual   

  )  

SELECT * FROM Services;   

  

INSERT INTO Crew (ConductorID, DriverID, Service1ID, Service2ID, Service3ID, Service4ID, Service5ID, ISecurityID)      

VALUES (1,1,1,2,3,4,5,1);   

  

INSERT INTO Crew (ConductorID, DriverID, Service1ID, Service2ID, Service3ID, Service4ID, Service5ID, ISecurityID)      

VALUES (2,2,6,7,8,9,10,2); 

  

INSERT INTO StationLocation (StationCity)    

    WITH StationLocations AS(    

        SELECT 'London' FROM dual UNION ALL    

        SELECT 'Manchester' FROM dual UNION ALL    

        SELECT 'Edinburgh' FROM dual UNION ALL    

        SELECT 'Bristol' FROM dual UNION ALL    

        SELECT 'Brighton' FROM dual UNION ALL    

        SELECT 'Leeds' FROM dual UNION ALL    

        SELECT 'Loughborough' FROM dual UNION ALL    

        SELECT 'Glasgow' FROM dual UNION ALL    

        SELECT 'Crawley' FROM dual UNION ALL    

        SELECT 'Birmingham' FROM dual    

    )  

SELECT * FROM StationLocations; 

  

INSERT INTO Station (StationName, CityID)     

    WITH Stations AS(     

        SELECT 'London Kings Cross', 1 FROM dual UNION ALL     

        SELECT 'Manchester Oxford Road', 2 FROM dual UNION ALL     

        SELECT 'Edinburgh Waverley', 3 FROM dual UNION ALL     

        SELECT 'Bristol Station', 4 FROM dual UNION ALL    

        SELECT 'Moulsecoomb Station', 5 FROM dual UNION ALL     

        SELECT 'Leeds Station', 6 FROM dual UNION ALL     

        SELECT 'Loughborough train station', 7 FROM dual UNION ALL    

        SELECT 'Argyle Street', 8 FROM dual UNION ALL    

        SELECT 'Ifield', 9 FROM dual UNION ALL    

        SELECT 'Birmingham New Street', 10 FROM dual    

  )     

SELECT * FROM Stations;   

  

INSERT INTO Train (TModern, ServiceStatus)  

VALUES(1, 1);  

INSERT INTO Train (TModern, ServiceStatus)  

VALUES(1, 1);    

INSERT INTO Train (TModern, ServiceStatus)  

VALUES(1, 0);    

INSERT INTO Train (TModern, ServiceStatus)  

VALUES(1, 0);    

INSERT INTO Train (TModern, ServiceStatus)  

VALUES(1, 1);    

INSERT INTO Train (TModern, ServiceStatus)  

VALUES(0, 1);    

INSERT INTO Train (TModern, ServiceStatus)  

VALUES(0, 1);    

INSERT INTO Train (TModern, ServiceStatus)  

VALUES(0, 0);    

INSERT INTO Train (TModern, ServiceStatus)  

VALUES(0, 1);    

INSERT INTO Train (TModern, ServiceStatus)  

VALUES(0, 0);   

  

INSERT INTO Journey (JourneyDate, CrewID, TrainID)       

VALUES ('01-JAN-20', 1, 1);   

INSERT INTO Journey (JourneyDate, CrewID, TrainID)       

VALUES ('01-JAN-20', 2, 2);    

INSERT INTO Journey (JourneyDate, CrewID, TrainID)       

VALUES ('02-JAN-20', 1, 6);    

INSERT INTO Journey (JourneyDate, CrewID, TrainID)       

VALUES ('03-JAN-20', 2, 7);    

  

INSERT INTO Route (Distance, StartTime, EndTime, RModern, StartStation, TerminalStation, JourneyID)    

VALUES (208, timestamp '2020-01-01 09:02:00', timestamp '2020-01-01 10:34:00', 1, 1, 2, 1);     

INSERT INTO Route (Distance, StartTime, EndTime, RModern, StartStation, TerminalStation, JourneyID)        

VALUES (220, timestamp '2020-01-01 10:05:00', timestamp '2020-01-01 10:20:00', 1, 2, 3, 1);     

INSERT INTO Route (Distance, StartTime, EndTime, RModern, StartStation, TerminalStation, JourneyID)        

VALUES (260, timestamp '2020-01-01 07:02:00', timestamp '2020-01-01 8:56:00', 0, 5, 6, 2);     

INSERT INTO Route (Distance, StartTime, EndTime, RModern, StartStation, TerminalStation, JourneyID)        

VALUES (86, timestamp '2020-01-01 08:10:00', timestamp '2020-01-01 09:27:00', 0, 6, 7, 2);     

INSERT INTO Route (Distance, StartTime, EndTime, RModern, StartStation, TerminalStation, JourneyID)        

VALUES (300, timestamp '2020-01-01 09:02:00', timestamp '2020-01-01 09:55:00', 0, 7, 8, 2);     

INSERT INTO Route (Distance, StartTime, EndTime, RModern, StartStation, TerminalStation, JourneyID)        

VALUES (117, timestamp '2020-01-02 09:02:00', timestamp '2020-01-02 10:14:00', 1, 1, 4, 3);     

INSERT INTO Route (Distance, StartTime, EndTime, RModern, StartStation, TerminalStation, JourneyID)        

VALUES (170, timestamp '2020-01-02 10:02:00', timestamp '2020-01-02 10:42:00', 1, 4, 2, 3);     

INSERT INTO Route (Distance, StartTime, EndTime, RModern, StartStation, TerminalStation, JourneyID)        

VALUES (260, timestamp '2020-01-02 12:20:00', timestamp '2020-01-02 15:14:00', 1, 2, 5, 3);     

INSERT INTO Route (Distance, StartTime, EndTime, RModern, StartStation, TerminalStation, JourneyID)        

VALUES (300, timestamp '2020-01-03 14:12:00', timestamp '2020-01-03 14:57:00', 0, 7, 8, 4);     

INSERT INTO Route (Distance, StartTime, EndTime, RModern, StartStation, TerminalStation, JourneyID)        

VALUES (442, timestamp '2020-01-03 15:22:00', timestamp '2020-01-03 15:49:00', 0, 8, 9, 4);     

  

INSERT INTO Passenger(PFirstName, PSurname, PType, RouteID)    

    WITH Passengers AS(    

        SELECT 'Mark', 'Williams', 'Student' , 1 FROM dual UNION ALL     

        SELECT 'Sarah', 'Johnson', 'Student' , 2 FROM dual UNION ALL  

        SELECT 'John', 'Favro', 'Student' , 5 FROM dual UNION ALL     

        SELECT 'David', 'Huntbach', 'Adult' , 3 FROM dual UNION ALL     

        SELECT 'Idris', 'Cartar', 'Adult' , 4 FROM dual UNION ALL     

        SELECT 'Joseph', 'Wanye', 'Teenager' , 5 FROM dual UNION ALL     

        SELECT 'Jacob', 'Renato', 'Teenager' , 6 FROM dual UNION ALL     

        SELECT 'Laura', 'Smith', 'Child' , 7 FROM dual UNION ALL     

        SELECT 'James', 'Tibet', 'Child' , 8 FROM dual UNION ALL     

        SELECT 'William', 'Becks', 'Senior Citizen' , 9 FROM dual UNION ALL     

        SELECT 'Sheila', 'Redstone', 'Senior Citizen' , 10 FROM dual    

    )    

SELECT * FROM Passengers;  

   

/*BASIC Find all routes that start or End in either London or Glasgow after the 1st of January*/   

SELECT Route.RouteID, Station.StationName, StationLocation.StationCity, Route.StartTime  

FROM Route   

INNER JOIN Station ON Route.StartStation = Station.StationID OR Route.TerminalStation = Station.StationID   

INNER JOIN StationLocation ON Station.CityID = StationLocation.CityID   

WHERE (StationCity = 'London' OR StationCity = 'Glasgow') AND StartTime > to_timestamp('01-01-2020 23:59:59', 'dd-mm-yyyy hh24:mi:ss');   

/*ROUTEID: 6, 9, 10 || STATIONNAME: London Kings Cross, Argyle Street, Argyle Street || STATIONCITY: London, Glasgow, Glasgow || RTIME: 02-JAN-20 09.02.00.000000 AM, 03-JAN-20 02.12.00.000000 PM, 03-JAN-20 03.22.00.000000 PM */  

  

/*BASIC Find the first name and last name of any student departing from London*/   

SELECT DISTINCT PFirstName, PSurname     

FROM Route   

INNER JOIN Passenger ON Route.RouteID = Passenger.RouteID   

INNER JOIN Station ON Route.StartStation = Station.StationID   

INNER JOIN StationLocation ON Station.CityID = StationLocation.CityID   

WHERE Passenger.PType = 'Student' AND Route.StartStation = Station.StationID AND StationLocation.StationCity = 'London';   

/*PFIRSTNAME: Mark || PSURNAME: Williams*/  

  

/*MEDIUM Show the first name of every passenger travelling after Jan 1st as well as their respective JourneyID*/   

SELECT Passenger.PFirstName, Route.JourneyID    

FROM Passenger    

FULL OUTER JOIN Route    

ON Passenger.RouteID = Route.RouteID    

WHERE StartTime > to_timestamp('01-01-2020 23:59:59', 'dd-mm-yyyy hh24:mi:ss')    

ORDER BY Passenger.PFirstName ASC;   

/*PFIRSTNAME: Jacob, James, Laura, Sheila, William || JOURNEYID: 3, 3, 3, 4, 4*/  

  

/*MEDIUM Count the number of times a crew has travelled on a modern train on 2nd January 2020 */   

SELECT COUNT(TModern), CrewID   

FROM Train, Journey   

WHERE ServiceStatus = 1 AND TModern = 1 AND JourneyDate BETWEEN '02-JAN-20' AND '02-JAN-20'   

GROUP BY CrewID   

ORDER BY COUNT(TModern) ASC;   

/*COUNT(TMODERN): 3 || CREWID: 1*/  

  

/*MEDIUM Find all of the first and last names of passengers who travelled between the 2nd and 3rd of Jan in Descending order*/   

SELECT Passenger.PFirstName, Passenger.PSurname, Journey.JourneyDate, Route.RouteID    

FROM Route    

INNER JOIN Passenger ON Passenger.RouteID = Route.RouteID    

INNER JOIN Journey ON Journey.JourneyID = Route.JourneyID    

WHERE Journey.JourneyDate BETWEEN '02-JAN-20' AND '03-JAN-20'   

ORDER BY trunc(Journey.JourneyDate) DESC;   

/*PFIRSTNAME: William, Sheila, Laura, Jacob, James || PSURNAME: Becks, Redstone, Smith, Renato, Tibet || JOURNEYDATE: 03-JAN-20, 03-JAN-20, 02-JAN-20, 02-JAN-20, 02-JAN-20|| ROUTEID: 9, 10, 7, 6, 8*/ 

 

/* Attempt at advanced query, average distance and time for a journey, doesn't work 

CREATE VIEW AvgDistTime AS  

SELECT AVG(a.Distance) AS Average_Distance, AVG(a.TimeTaken) AS Average_TimeTaken 

FROM 

( 

SELECT Journey.JourneyID, Route.Distance, (EndTime - StartTime) AS "TimeTaken" 

FROM Route   

FULL OUTER JOIN Journey    

ON Journey.JourneyID = Route.JourneyID  

WHERE Journey.JourneyID = 1 

) */ 